@model Veesy.Presentation.Model.Cloud.CloudViewModel
@{
    ViewData["Title"] = "Cloud";
}

@section Style
{
    <link rel="stylesheet" href="~/css/dropzone_cloudpage.css" asp-append-version="true" />

}

<div class="row pt-7rem">
    <div class="col-sm-12 col-md-3">
        <nav class="breadcrumb-container" aria-label="Percorso di navigazione">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><img src="imgs/dashboard_home_dark-mode.png" style="width: 18px; margin-top: -5px;" class="me-2"><a class="breadcrumb-a-white me-2 text-white" asp-area="Portfolio" asp-controller="Home" asp-action="Index">dashboard</a><i class="fa-solid fa-chevron-right text-white"></i></li>
                <li class="breadcrumb-item"><a class="breadcrumb-a-white me-2 text-white" asp-action="List"><strong>cloud</strong></a></li>
            </ol>
        </nav>
    </div>
    <div class="text-white col-sm-12 col-md-6">
        <h1><strong>Cloud</strong></h1>
        <div class="empty-veesy"></div>
        <p class="text-white mb-0">Here you can upload your files. Drop files on the screen to upload. The recommended format is 4:3 horizontal or vertical, format accepted: jpg, png, mov, mp4, gif. <a class="grey-link ms-2"><strong>learn more <i class="fa-solid fa-arrow-up-right-from-square"></i></strong></a></p>
        <div class="empty-veesy nodisplay-md"></div>
        @{
            var nodisplay_md = "mt-4";
            if (Model.Medias != null && Model.Medias.Count != 0)
            {
                nodisplay_md = "nodisplay-md";
            }
        }
        <div class="@nodisplay_md" id="div-uploader">
            <form enctype="multipart/form-data" asp-action="UploadMedia" asp-controller="Media" asp-area="Portfolio" class="dropzone card-grey-dashed-veesy mb-4" id="uploader">
                <a id="dropzone-close-button" style="display: none;" onclick="hideDropZone()" class="ms-2 btn btn-light border fw-bolder shadow-none close-button-dropzone">
                    <i class="fas fa-times-circle fa-2xs text-primary" id="icon-color" aria-hidden="true"></i>
                    <span id="color-text-variant">close</span>
                </a>
                <div class="dz-message needsclick" id="message-uploader">
                    <div id="div-uploader-icon" class="w-100 mb-1">
                        <i id="uploader-icon" class="fa-solid fa-circle-plus fa-xl" style="color: #0D2045"></i>
                    </div>
                    <span id="uploader-text" class="text">
                        Upload or drop files here. <br/> (Accepted formats: jpg, png, mov, mp4, gif)
                    </span>
                    <div class="progress-bar progress-bar-primary" role="progressbar" data-dz-uploadprogress>
                        <span class="progress-text"></span>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="col-sm-12 col-md-3 nodisplay-sm">
        <div class="d-flex justify-content-center">
            <div class="w-75-veesy card-blue-veesy p-3">
                <div class="text-end"><i class="fa-solid fa-circle fa-2xs" style="color: #ffffff;"></i></div>
                <p class="mb-0" style="color: white">Do you need some help?</p>
                <a class="a-ciano-underline" href="mailto:support@veesy.it">Contact us</a>
            </div>
        </div>
        <div class="empty-veesy"></div>
        <div class="empty-veesy"></div>
        <div class="empty-veesy"></div>
    </div>
</div>
<div class="row">
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm"></div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-1">
        @for (int i = 0; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-2">
        @for (int i = 1; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-3">
        @for (int i = 2; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-4">
        @for (int i = 3; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-5">
        @for (int i = 4; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-6">
        @for (int i = 5; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-7">
        @for (int i = 6; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm" id="column-0">
        @for (int i = 7; i < Model.Medias.Count; i = i+8)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container show-edit">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a  onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col mb-4 mb-lg-0 nodisplay-sm"></div>
    <div class="p-1 col-6 mb-4 mb-lg-0 nodisplay-md" id="column-mobile-1">
        @for (int i = 0; i < Model.Medias.Count; i = i+2)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container" onmouseover="showEditButton(this)" onmouseout="hideEditButton(this)">
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="p-1 col-6 mb-4 mb-lg-0 nodisplay-md" id="column-mobile-0">
        @for (int i = 1; i < Model.Medias.Count; i = i+2)
        {
            <div id="div-for-remove-@Model.Medias[i].Code" class="media-container"> 
                <a class="edit-button" onclick="EditMedia('@Model.Medias[i].Code'); return false;">
                    <strong style="margin-right: 5px; font-size: 14px;">edit</strong>
                    <i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>
                </a>
                <a onclick="SelectMedia('@Model.Medias[i].Code')">
                    <div class="img-div">
                        @if (Model.Medias[i].IsVideo.HasValue && Model.Medias[i].IsVideo.Value)
                        {
                            <video autoplay="autoplay" muted loop id="img-@Model.Medias[i].Code" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="@Model.Medias[i].OriginalFileName">
                                <source src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img asp-append-version="true" id="img-@Model.Medias[i].Code" src="@Model.BasePath@Model.Medias[i].FileName?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="@Model.Medias[i].OriginalFileName"/>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
</div>

<div class="empty-veesy"></div>
<div class="empty-veesy"></div>
<div class="empty-veesy"></div>

<div id="alert-portfolio" class="custom-alert-cloud shadow alert alert-veesy-cloud alert-dismissible fade mobile-option-cloud" role="alert" >
    <div class="w-100">
        <div class="float-start">
            <div class="d-flex mt-2">
                <p id="number_files" class="fw-bolder" style="margin-top: -2px;">1 files selected</p>
                <a onclick="confirmDelete(), openModal('#modalDeleteMedia')" class="red-link-underline ms-3" style="font-size: 14px;">delete</a>
            </div>
        </div>
        <div class="float-end">
            <div class="d-flex align-items-center">
                <a class="blue-link me-4 fw-bolder" style="font-size: 14px; margin-top: 2px;">+ add to portfolio</a>
                <a onclick="openModal('#modalCreatePortfolio'), ResetInput()" class="rounded-pill btn btn-grey btn-padding" style="padding-left: 35px !important; padding-right:  35px !important; font-size:  15px;" type="submit">create portfolio</a>
                <a class="ms-4 me-2 mt-1" type="button" onclick="CloseAlert()"><i class="fa-solid fa-grey fa-circle-xmark"></i></a>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDeleteMedia" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-color" id="exampleModalLongTitle"><strong>Delete Medias</strong></h3>
                <a onclick="closeModal('#modalDeleteMedia')"><i class="fa-solid fa-grey fa-circle-xmark"></i></a>
            </div>
            <div class="empty-veesy"></div>
            <div class="modal-body text-center">
                <h5><strong id="confirm-delete-body" style=" white-space: pre">0 Medias will be delete permanently. Are you sure?</strong></h5>
            </div>
            <div class="empty-veesy"></div>
            <div class="row">  
                <div class="col-4">
                    <p class="ps-3 text-muted">
                        <a style="text-decoration: underline !important; position: relative; top: 20px;" class="grey-link mt-3" onclick="closeModal('#modalDeleteMedia')">back to cloud</a>
                    </p>
                </div>
                <div class="col-4 justify-content-center" style="display: flex"><a onclick="deleteMedia()" class="mt-2 rounded-pill btn btn-delete" type="submit">yes, delete</a></div>
                <div class="col-4"></div>
            </div>
            <div class="empty-veesy"></div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalCreatePortfolio" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-color" id="exampleModalLongTitle"><strong>Create Portfolio</strong></h3>
                <a onclick="closeModal('#modalCreatePortfolio')"><i class="fa-solid fa-grey fa-circle-xmark"></i></a>
            </div>
            <div id="input-portfolio">
                <div class="modal-body">
                    <p class="mb-0">name your Portfolio</p>
                    <input type="text" id="portfolio-name-edit" rows="4" class="w-100 input-modal"/>
                    <p class="mb-0"><strong>max. 50 characters</strong></p>
                </div>
                <div class="modal-footer">                
                    <a onclick="CreateNewPortfolio()" class="mt-2 rounded-pill btn btn-primary btn-padding" type="submit">save</a>
                </div>
            </div>
            <div id="success-portfolio" style="display: none">
                <div class="modal-body justify-content-center d-flex">
                    <a id="portfolio-setting-link" class="mt-2 rounded-pill btn btn-primary" type="submit">view portfolio</a> 
                </div>
                <div class="modal-footer">    
                    <div class="empty-veesy"></div>
                    <div class="empty-veesy"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    
    function ResetInput() {
        document.getElementById("input-portfolio").style.display = "block";
        document.getElementById("success-portfolio").style.display = "none";
    }
    
    
    function CreateNewPortfolio() {
        $('#load-spinner').css("display", "block");
        var Name = document.getElementById("portfolio-name-edit").value
        CodeImagesToAdd = []
        for (const code in img_selected_id) {
            CodeImagesToAdd.push(img_selected_id[code])
        }
        var newPortfolioDto = {CodeImagesToAdd,  Name};
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Create", "Portfolio")',
            data: JSON.stringify(newPortfolioDto),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (response) {
                if(response.result){
                    document.getElementById("input-portfolio").style.display = "none";
                    document.getElementById("success-portfolio").style.display = "block";
                    document.getElementById("portfolio-setting-link").setAttribute('href', "/portfolio/settings/" + response.code);  
                }
                $('#load-spinner').css("display", "none");
            },
            error: function (response) {
                $('#load-spinner').css("display", "none");
            }
        })
    }
    
    let imageNumber = @Model.Medias.Count;
    function CloseAlert() {
        alert_portfolio.classList.remove("show");
        var items = document.getElementsByClassName("img-rounded-ciano");
        while (items.length > 0){
            items[0].classList.add("img-rounded-trasparent");
            items[0].classList.remove("img-rounded-ciano");
        }
        img_selected_id = []
    }
    
    function confirmDelete(){
        var newline = "\r\n";
        document.getElementById("confirm-delete-body").textContent = img_selected_id.length + " Medias will be delete" + newline + "permanently. Are you sure?"
    }
    
    var img_selected_id = [];
    
    function deleteMedia() {
        $('#load-spinner').css("display", "block");
        var data = [];
        for (const code in img_selected_id) {
            data.push(img_selected_id[code])
        }
        
        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteMediaList", "Media")',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (response) {
                if(response.result){
                    for (let i = 0; i<response.codeToDelete.length; i++){
                        document.getElementById("div-for-remove-" + response.codeToDelete[i]).style.display = "none";
                        removeMediaFromList(response.codeToDelete[i]);
                        alert_portfolio.classList.remove("show");
                    }
                    location.reload();
                }
                else{
                    toastNotifyCustom(response.message, 10000, "#ca0a0a", "")
                }
                $('#load-spinner').css("display", "none");
            },
            error: function (response) {
                $('#load-spinner').css("display", "none");
            }
        })
    }
    
    
    function EditMedia(s) {
        document.location.href = '@Model.ApplicationUrl' + '/cloud/edit/' + s;
    }
    
    
    const alert_portfolio = document.getElementById("alert-portfolio");
    function SelectMedia(img_id) {
        var media = document.getElementById('img-'+img_id); 
        if(media.classList.contains("img-rounded-ciano")){
            media.classList.remove("img-rounded-ciano")
            media.classList.add("img-rounded-trasparent")
            removeMediaFromList(img_id);
        }
        else{
            media.classList.remove("img-rounded-trasparent")
            media.classList.add("img-rounded-ciano")
            img_selected_id.push(img_id);
        }
        if (img_selected_id.length > 0){
            alert_portfolio.classList.add("show");
            document.getElementById("number_files").textContent = img_selected_id.length + " files selected"
        }
        else{
            alert_portfolio.classList.remove("show");
        }
        
    }
    
    function removeMediaFromList(value){
        const index = img_selected_id.indexOf(value);
        if (index > -1) { // only splice array when item is found
          img_selected_id.splice(index, 1); // 2nd parameter means remove one item only
        }
    }
    
    function submitForm() {
       document.getElementById("uploader").submit();
    }
    var div_uploader = document.getElementById("div-uploader");
    /*Dropzone configuration*/
        Dropzone.autoDiscover = false;
        var uploader = null;
        var msgUploader = document.getElementById("message-uploader");
        var divUploader = document.getElementById("div-uploader-icon");
        var iconUploader = document.getElementById("uploader-icon");
        var txtUploader = document.getElementById("uploader-text");
        let dropzone_processing = false;
    
        var dropzoneOptions = {
            dictDefaultMessage: 'Upload or drop files here',
            paramName: "file",
            maxFilesize: 10000, // MB
            addRemoveLinks: true,
            parallelUploads: 5,
            uploadMultiple: true,
            acceptedFiles: "image/jpeg,image/png,image/gif,image/jpg,video/mp4,video/mov",
            addedfiles: function (){
                dropzone_processing = true;
            },
            uploadprogress: function(file, progress, bytesSent) {
                if (file.previewElement) {
                    var progressElement = file.previewElement.querySelector("[data-dz-uploadprogress]");
                    progressElement.style.width = progress + "%";
                }
            },
            success: function (file) {
               this.removeFile(file);
            },
            successmultiple: function (file, response) {
                const res = JSON.parse(response);
                // TODO mostrare popup con success/error
                if (res.NumberSuccessFile > 0){
                    toastNotifyCustom(res.SuccessFileMessage, 10000, "#75ccdd", "")
                    for (let i = 0; i < res.MediaDtos.length; i++){
                        var divider = 8
                        var mobile= "";
                        if (screen.width < 600){
                            divider = 2
                            mobile = "mobile-"
                        }
                        imageNumber++;
                        var index = imageNumber % divider;
                        if (!res.MediaDtos[i].IsVideo){
                            document.getElementById("column-" + mobile +  index).innerHTML +=
                            '<div id="div-for-remove-' + res.MediaDtos[i].Code + '" class="media-container show-edit">' +
                             '<a class="edit-button" onclick="EditMedia(\'' + res.MediaDtos[i].Code + '\'); return false;">' +
                                 '<strong style="margin-right: 5px; font-size: 14px;">edit</strong>' +
                                 '<i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>' +
                             '</a><a onclick="SelectMedia(\'' + res.MediaDtos[i].Code + '\')">' +
                                 '<div class="img-div">' +
                                         '<img asp-append-version="true" id="img-' + res.MediaDtos[i].Code + '" src="' + '@Model.BasePath' + res.MediaDtos[i].FileName + '?tr=w-300" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05 mb-2" alt="'+ res.MediaDtos[i].OriginalFileName +'"/>' +
                                 '</div></a></div>'
                         }
                        else{
                            document.getElementById("column-"+ mobile + index).innerHTML +=
                            '<div id="div-for-remove-' + res.MediaDtos[i].Code + '" class="media-container show-edit">' +
                             '<a class="edit-button" onclick="EditMedia(\'' + res.MediaDtos[i].Code + '\'); return false;">' +
                                 '<strong style="margin-right: 5px; font-size: 14px;">edit</strong>' +
                                 '<i class="fa-regular fa-pen-to-square" style="font-size: 14px;"></i>' +
                             '</a><a onclick="SelectMedia(\'' + res.MediaDtos[i].Code + '\')">' +
                                 '<div class="img-div">' +
                                         '<video autoplay="autoplay" muted loop id="img-' + res.MediaDtos[i].Code + '" class="img-rounded-trasparent w-100 shadow-1-strong rounded-05" alt="'+ res.MediaDtos[i].OriginalFileName +'">' +
                                              '<source src="' + '@Model.BasePath' + res.MediaDtos[i].FileName + '?tr=w-300" type="video/mp4">' +
                                    '</video></div></a></div>'
                                    
                        }
                    }
                }    
                if (res.NumberErrorFile > 0)
                    toastNotifyCustom(res.ErrorFileMessage, 10000, "#ca0a0a", "")
             },
            errormultiple: function () {
                toastNotifyCustom("Error during uploading files. Please retry.", 10000, "#ca0a0a", "")
             },
            queuecomplete: function (){
               hideDropZone()
               //location.reload() 
               dropzone_processing = false;
            }
        };
                
        uploader = document.querySelector('#uploader');
        var newDropzone = new Dropzone(uploader, dropzoneOptions);
        
        // 1
        window.addEventListener('dragenter', function(e) {
            showDropZone();
        });
        
        // 2
        uploader.addEventListener('dragenter', allowDrag);
        uploader.addEventListener('dragover', allowDrag);
        
        // 3
        uploader.addEventListener('dragleave', function(e) {
            console.log('dragleave');
            //hideDropZone();
        });
        
        // 4
        uploader.addEventListener('drop', handleDrop);
               
    
        function showDropZone() {
            document.getElementById("dropzone-close-button").style.display = "block";
            div_uploader.classList.remove("nodisplay-md");
            uploader.classList.remove("card-grey-dashed-veesy");
            uploader.classList.add("dropzone-full-page");
            
            divUploader.classList.remove("mb-1");
            msgUploader.classList.add("text-center");
            msgUploader.classList.add("h-100");
            msgUploader.style.marginTop = "20%";
            divUploader.classList.add("mb-4");
            txtUploader.classList.add("text-white");
            iconUploader.style.color = "#ffffff"
            
            document.body.style.overflow = 'hidden';
        }
        function hideDropZone() {
            document.getElementById("dropzone-close-button").style.display = "none";
            div_uploader.classList.add("nodisplay-md");
            uploader.classList.remove("dropzone-full-page");
            uploader.classList.add("card-grey-dashed-veesy");
            
            msgUploader.classList.remove("text-center");
            msgUploader.classList.remove("h-100");
            msgUploader.style.marginTop = "2em";
            divUploader.classList.remove("mb-4");
            txtUploader.classList.remove("text-white");
            iconUploader.style.color = "#202F4D"
            divUploader.classList.add("mb-1");
            
            document.body.style.overflow = 'visible';
        }
        
        function allowDrag(e) {
            if (true) {  // Test that the item being dragged is a valid one
                e.dataTransfer.dropEffect = 'copy';
            }
        }
        
        function handleDrop(e) {
            //hideDropZone();
        }
        
        // window.addEventListener("beforeunload", function (e) {
        //     if (!dropzone_processing){
        //         // Cancel the event
        //         e.preventDefault(); // If you prevent default behavior in Mozilla Firefox prompt will always be shown
        //         // Chrome requires returnValue to be set
        //         e.returnValue = "";
        //     }
        //   });
        
        function showEditButton(container) {
            const editButton = container.querySelector(".edit-button");
            if (editButton) {
                editButton.style.display = "inline-block";
            }
        }
    
        function hideEditButton(container) {
            const editButton = container.querySelector(".edit-button");
            if (editButton) {
                editButton.style.display = "none";
            }
        }
        
    </script>
}