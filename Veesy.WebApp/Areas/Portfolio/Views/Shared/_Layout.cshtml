<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Veesy | @ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site-dark.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Veesy.WebApp.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0-beta2/css/bootstrap-select.min.css" asp-append-version="true" />
    @await RenderSectionAsync("Style", required: false)
</head>
<body>
<header>
@{
    var background = ViewContext.RouteData.Values["Controller"].ToString() == "Cloud" ? "bg-grey" : "bg-grey-veesy";
}
    <nav class="@background navbar navbar-expand-sm navbar-toggleable-sm mb-3 fixed-top">
        <div class="container-fluid">
                
            <h1 class="h3 mb-2 fw-normal">
                @if(ViewContext.RouteData.Values["Controller"].ToString() == "Cloud")
                {
                    <a role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="breadcrumb-a-white text-white navbar-brand" asp-area="Portfolio" asp-controller="Cloud" asp-action="List">
                        <img class="header-logo-v">cloud
                    </a>
                }
                else if(ViewContext.RouteData.Values["Action"].ToString() == "Contacts"){
                    <a role="button" href="" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="navbar-brand" >
                        <img class="header-logo">contacts
                    </a>
                }
                else if (ViewContext.RouteData.Values["Action"].ToString() == "Splash")
                {
                    <a role="button" href="" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="navbar-brand">
                        <img class="header-logo">
                    </a>
                }
                else if(ViewContext.RouteData.Values["Action"].ToString() == "About"){
                    <a role="button" href="" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="navbar-brand" >
                        <img class="header-logo">about
                    </a>
                }
                else if(ViewContext.RouteData.Values["Action"].ToString() == "Creators"){
                    <a role="button" href="" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="navbar-brand" >
                        <img class="header-logo">creators
                    </a>
                }
                else
                {
                    <a role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                        <img class="header-logo">dashboard
                    </a>
                }
            </h1> 
            <div class="float-end mb-2">
                <div class="d-flex">
                    <div class="nodisplay-sm dropdown show">
                        @{
                            var imageSrc = ViewBag.BaseDirectory + ViewBag.ProfileImage;
                            
                            string username = User.Identity.Name;
                            if (string.IsNullOrEmpty(ViewBag.ProfileImage))
                            {
                                imageSrc = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrVmYaV8ReWhTf5aMtZgkI__Mf9iCStzIShCMY-EzO-s05kD81VTb5ZtLnz5CiqB1LXu4&usqp=CAU";
                            }
                        }
                        @if (username != null)
                        {
                            <a class="dropdown-toggle btn btn-light border fw-bolder shadow-none">
                                <img src='@imageSrc' style="width: 20px !important; height: 20px !important; max-width: none!important; " class="img-thumbnail-custom rounded-circle" alt="user-image">
                                <span id="color-text-layout">@username</span>
                            </a>

                            <div class="dropdown-menu bg-grey-veesy" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Portfolio" ? "a-ciano-header" : "menu-element")" asp-action="List" asp-controller="Portfolio" asp-area="Portfolio">Portfolio</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Cloud" ? "a-ciano-header" : "menu-element")" asp-action="List" asp-controller="Cloud" asp-area="Portfolio">Cloud</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Public" ? "a-ciano-header" : "menu-element")" asp-action="PricingPlan" asp-controller="Public" asp-area="Public">Your Plan</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Profile" ? "a-ciano-header" : "menu-element")" asp-action="Profile" asp-controller="Profile" asp-area="Account">Profile</a>
                                <a class="dropdown-item menu-element" asp-action="Logout" asp-controller="Auth" asp-area="Auth">Log out</a>
                            </div>
                        }
                        else
                        {
                            <a asp-action="Login" asp-controller="Auth" asp-area="Auth" class="ms-2 btn btn-light border fw-bolder shadow-none">
                                <i class="fas fa-user fa-2xs text-primary" id="icon-color"></i>
                                <span id="color-text-variant">account</span>
                            </a>
                        }
                        
                    </div>
                    <button class="ms-2 btn btn-light border fw-bolder shadow-none" id="menuButton">
                        <i class="fas fa-circle fa-2xs text-primary mr-2" id="icon-color"></i>
                        <span id="color-text-variant">menu</span>
                    </button>
                </div>
            </div>
            <div class="menu-popup" id="menuPopup">
                <div class="float-end d-flex">
                    @if(username != null){
                        <div class="dropdown show" id="none-popup">
                            <a class="dropdown-toggle btn btn-light border fw-bolder shadow-none">
                                <img src='@imageSrc' style=" width: 20px !important; height: 20px !important; max-width: none!important; " class="img-thumbnail-custom rounded-circle" alt="user-image">
                                <span id="color-text-variant">@username</span>
                            </a>
                            <div class="dropdown-menu bg-grey-veesy" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Portfolio" ? "a-ciano-header" : "menu-element")"  asp-action="List" asp-controller="Portfolio" asp-area="Portfolio">Portfolio</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Cloud" ? "a-ciano-header" : "menu-element")" asp-area="Portfolio" asp-controller="Cloud" asp-action="List">Cloud</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Public" ? "a-ciano-header" : "menu-element")" asp-action="PricingPlan" asp-controller="Public" asp-area="Public">Your Plan</a>
                                <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Profile" ? "a-ciano-header" : "menu-element")" asp-action="Profile" asp-controller="Profile" asp-area="Account">Profile</a>
                                <a class="dropdown-item menu-element" asp-action="Logout" asp-controller="Auth" asp-area="Auth">Log out</a>
                            </div>
                        </div>
                    }
                    <button class="ms-2 btn btn-light border fw-bolder shadow-none" id="closeButton">
                        <i class="fas fa-times-circle fa-2xs text-primary" id="icon-color"></i>
                        <span id="color-text-variant">close</span>
                    </button>
                </div>
                <div class="container center-content-menu">
                    <div class="menu-list">
                        <ul class="list-unstyled">
                            <li class="m-4"><a href="#" class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description1">Gallery</a></li>
                            <li class="m-4"><a asp-action="Creators" asp-controller="Public" asp-area="Public" class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description2">Creators</a></li>
                            <li class="m-4"><a asp-action="About" asp-controller="Public" asp-area="Public" class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description3">About</a></li>
                            <li class="m-4"><a href="#" class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description4">Match</a></li>
                            <li class="m-4"><a asp-action="Profile" asp-controller="Profile" asp-area="Account"  class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description5">Profile</a></li>
                            <li class="m-4"><a asp-action="Contacts" asp-controller="Public" asp-area="Public" class="float-end fw-bolder p-2 menu-element font-weight-normal" id="color-text" data-target="#description6">Contact</a></li>
                        </ul>
                    </div>
                    <div class="d-flex" style="height: 250px;">
                        <div class="vr custom-vr"></div>
                    </div>
                    <div class="description-container mt-5">
                        <div id="description1" class="description-content mt-1 text-color" ><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p></div>
                        <div id="description2" class="description-content mt-1 text-color" ><p>unknown printer took a galley of type and scrambled it to make a type speci</p></div>
                        <div id="description3" class="description-content mt-1 text-color" ><p>essentially unchanged. It was popularised in the 1960s with the release of Letraset shee</p></div>
                        <div id="description4" class="description-content mt-1 text-color" ><p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,</p></div>
                        <div id="description5" class="description-content mt-1 text-color" ><p>unknown printer took a galley of type and scrambled</p></div>
                        <div id="description6" class="description-content mt-1 text-color" ><p>Lorem Ipsum is simply dummy text of the printing</p></div>
                    </div>
                </div>


                   <div class="menu-footer">
                       <a href="#" id="color-text">privacy policy</a>
                       <a href="#" class="cookie" id="color-text">cookie policy</a><br/>
                       <p href="#" class="copyright" id="color-text-footer">Veesy © 2023 all rights rederved - website by <a target="_blank" href="https://www.derein.net/" style="color: #202F4D">derein</a> & <a target="_blank" href="https://www.enigma-tech.it/" style="color: #202F4D">enigma</a> - VAT nr. 4840572639</p>
                   </div>
               </div>

           </div>
           <div class="switch-container dark-light" >
              <input type="checkbox" id="switchInp">
                <label for="switchInp" class="pull-string">
                  <canvas id="stringCanvas" width="150" height="100"></canvas>
                </label>
          </div>
       </nav>
    
</header>
<div id="load-spinner" style="display: none; position: fixed; z-index: 9999; padding-top: 500px !important; height: 100%; width: 100%; background-color: rgba(0, 0, 0, 0.5);" class="text-center">
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>
<div class="@background container-fluid" style="padding-left: 15px; padding-right: 15px;">
    @RenderBody()
</div>

<footer class="footer" style="margin-top: -2.5%;">
    <div class="container">
        <div class="row mb-3">
            <div class="col-md-3 mt-5 veesy-text-color" >
                <h2 class="h2 mt-3 fw-normal">
                    <div class=" mb-5 d-inline-flex" asp-area="" asp-controller="Home" asp-action="Index"><img class="logo-footer"></div> 
                </h2>
                <p class="text-color">Veesy S.R.L.<br/>
                    Via Giacomo Matteotti 43<br/>
                    20832, Desio (MB)</p>
                <div class="row mt-4 social-icons-row">
                    <div class="col">
                        <a href="#" class="social-icon"><i class="fa-brands fa-facebook icon-color-veesy"></i></a>
                        <a href="#" class="social-icon"><i class="fa-brands fa-instagram icon-color-veesy"></i></a>
                        <a href="#" class="social-icon"><i class="fa-brands fa-linkedin icon-color-veesy"></i></a>
                        <a href="#" class="social-icon"><i class="fa-brands fa-x-twitter icon-color-veesy"></i></a></div>
                </div>
            </div>
            <div class="col-md-2 mt-3 mt-md-5 veesy-text-color" >
                <h4 class="h6 mt-5 fw-normal">
                    <div class="mb-4 d-inline-flex"><b>INFO</b></div> 
                </h4>
                <div class="text-color">
                    <a asp-action="About" asp-controller="Public" asp-area="Public" >About</a><br/>
                    <a asp-action="PricingPlan" asp-controller="Public" asp-area="Public">Plans & Pricing</a><br/>
                    <a href="#">FAQ</a><br/>
                    <a href="#">Log In</a>
                </div>
            </div>
            <div class="col-md-3 mt-3 mt-md-5 veesy-text-color" >
                <h4 class="h6 mt-5 fw-normal">
                    <div class=" mb-4 d-inline-flex"><b>LEGAL</b></div> 
                </h4>
                <div class="text-color">
                    <a href="#">Privacy Policy</a><br/>
                    <a href="#">Cookies Policy</a><br/>
                    <a href="#">Community Rules</a>
                </div>
            </div>
            <div class="col-md-3 mt-3 mt-md-5 mb-4 veesy-text-color" >
                <h4 class="h6 mt-5 fw-normal">
                    <div class=" mb-3 d-inline-flex"><b>Do you need some help or want to share some ideas with us?</b></div> 
                </h4>
                <a href="mailto:info@veesy.it" class="contact-veesy rounded-pill btn btn-primary btn-variant" type="submit">contact veesy</a>
            </div>
        </div>
        <div class="row">
            <div class="mb-3 veesy-text-color d-flex justify-content-between">
                <p class="d-none d-lg-block text-color">Veesy S.R.L. © 2023 All rights reserved - Vat.: 13005470961 - annual social capital € 10.000</p>
                <p class="text-end me-4 d-none d-lg-block text-color">web project by <a href="https://www.derein.net/">derein</a> & <a href="https://www.enigma-tech.it/">enigma</a></p>
                <p class="d-block d-lg-none d-inline text-color">Veesy S.R.L. © 2023 All rights reserved - Vat.: 13005470961 - annual social capital € 10.000 - web project by <a href="https://www.derein.net/">derein</a> & <a href="https://www.enigma-tech.it/">enigma</a></p>
            </div>
        </div>
    </div>
</footer>

    @* <footer class="border-top footer text-muted"> *@
    @*     <div class="container"> *@
    @*         &copy; 2023 - Veesy.WebApp - <a>Privacy</a> *@
    @*     </div> *@
    @* </footer> *@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/e08a602379.js" crossorigin="anonymous"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    @await Component.InvokeAsync("Notyf")
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
    const menuButton = document.getElementById('menuButton');
    const menuPopup = document.getElementById('menuPopup');
    const closeButton = document.getElementById('closeButton');

    window.onload = (event) => {
      document.getElementById('none-popup').style.display = "none";
    };
    
    
    //Start Dark Mode
    // Verifica se esiste una preferenza del tema nel localStorage
    const savedTheme = localStorage.getItem("theme");
    
    // Ottieni l'elemento della checkbox e l'elemento root del documento
    const checkbox = document.getElementById("switchInp");
    const rootElement = document.documentElement;
    
    // Funzione per impostare il tema e lo stato "checked" della checkbox
    function setTheme(theme) {
      rootElement.setAttribute("data-bs-theme", theme);
      localStorage.setItem("theme", theme);
    }
    
    // Inizializza il tema in base alla preferenza salvata o al tema predefinito
    if (savedTheme) {
      setTheme(savedTheme);
    } else {
      setTheme("light"); // Imposta il tema predefinito
    }
    
    // Imposta lo stato "checked" della checkbox iniziale all'avvio
    checkbox.checked = rootElement.getAttribute("data-bs-theme") === "dark";
    
    // Aggiungi un listener per la checkbox
    checkbox.addEventListener("click", () => {
      if (checkbox.checked) {
        setTheme("dark");
      } else {
        setTheme("light");
      }
    });

    //End Dark Mode

    menuButton.addEventListener('click', () => {
        menuPopup.classList.toggle('active');
        document.body.classList.toggle('no-scroll');
        document.getElementById('none-popup').style.display = "block";
    });

    closeButton.addEventListener('click', () => {
      menuPopup.classList.remove('active');
      document.body.classList.remove('no-scroll'); 
      document.getElementById('none-popup').style.display = "none";
    });
    
      // Chiudi il popup quando si clicca fuori da esso
      $(document).on('click', (e) => {
        if (!menuPopup.contains(e.target) && !menuButton.contains(e.target)) {
          menuPopup.classList.remove('active');
          document.body.classList.remove('no-scroll'); 
        }
      });
      
        $(document).ready(function() {
               $(".menu-list a").mouseenter(function() {
                   var target = $(this).data('target');
                   $(".description-content").hide();
                   $(target).show();
               });
           });
        
        function openModal(id){
            $(id).modal('show');
        }
        function closeModal(id){
            $(id).modal('hide');
        }
        
        function setTextAreaValue(textAreaId, valueToSet){
            valueToSet = valueToSet.replaceAll("&#x27;", "'");
            document.getElementById(textAreaId).value = valueToSet; 
        }
        
        /**
         *  simulate a pull string thingy
         *  not self contained, so only does one on the page, but that could be updated
         */
        
        // some settings
        const BEAD_COUNT = 80;
        const BEAD_SIZE = 2.5; // radius for beads
        const BEAD_DIST = 80 / (BEAD_COUNT + 2); // how far apart beads should be. 400 is canvas size, so we're just dividing it
        const INITIAL_X_MOMENTUM = -5; // x speed / second of bottom bead when the click happens
        const GRAVITY = 4; // downward acceleration / second
        const X_FRICTION = .01; // constant decrease in x acceleration / second
        
        // helpers
        function pythag (x1, y1, x2, y2) {
          return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
        }
        function getAngle (x1, y1, x2, y2) {
          return Math.atan((y2 - y1) / (x2 - x1));
        }
        
        // setup canvas
        var canvas = stringCanvas;
        var ctx = canvas.getContext('2d');
        var running = true;
        var lit = switchInp.checked;
        
        // beads
        class Bead {
          constructor (initialX, initialY) {
            this.x = initialX;
            this.y = initialY;
            this.speedX = 0;
            this.speedY = 0;
        
            this.parent = {
              x: canvas.width / 2,
              y: 0
            }
          }
        
          draw() {
            ctx.save();
            ctx.beginPath();
            ctx.moveTo(this.x, this.y - BEAD_SIZE);
            ctx.arc(this.x, this.y, BEAD_SIZE, 0, Math.PI * 2, false);
        
            var grd;
            if (lit) {
              grd = ctx.createRadialGradient(this.x, this.y, BEAD_SIZE, this.x - BEAD_SIZE / 2, this.y - BEAD_SIZE / 4, BEAD_SIZE * .75);
              grd.addColorStop(1, "white");
              grd.addColorStop(0, "white");
              ctx.fillStyle = grd;
            }
            else {
              grd = ctx.createRadialGradient(this.x, this.y, BEAD_SIZE, this.x - BEAD_SIZE / 2, this.y - BEAD_SIZE / 4, BEAD_SIZE * .75);
              grd.addColorStop(1, "#0D2045");
              grd.addColorStop(0, "#0D2045");
              ctx.fillStyle = grd;
            }
            ctx.fillStyle = grd;
            ctx.fill();
            var highlight = ctx.createRadialGradient(this.x, this.y, BEAD_SIZE, this.x + BEAD_SIZE / 3, this.y + BEAD_SIZE / 6, BEAD_SIZE);
            
            ctx.fillStyle = highlight;
            ctx.fill();
            ctx.restore();
          }
        
          drawLine() {
            ctx.save();
            ctx.beginPath();
            ctx.moveTo(this.parent.x, this.parent.y);
            ctx.lineTo(this.x, this.y);
            ctx.stroke();
            ctx.restore();
          }
        
          setParent(parentBead) {
            this.parent = parentBead;
          }
        
          setSpeed(x,y) {
            this.speedX = x;
            this.speedY = y;
          }
        
          addMomentum(x,y) {
            this.speedX += x;
            this.speedY += y;
          }
        
          updateMomentum(deltaTime) {
            // gravity
            this.speedY += GRAVITY * deltaTime / 1000;
            if (Math.abs(this.speedX < this.speedX - X_FRICTION * deltaTime / 1000))
              this.speedX = 0;
            else
              this.speedX = this.speedX > 0 ? this.speedX - X_FRICTION * deltaTime / 1000 : this.speedX + X_FRICTION * deltaTime / 1000;
          }
        
          move() {
            this.x += this.speedX;
            this.y += this.speedY;
          }
        
          positionBasedOnParent() {
            // check distance from parent
            if (this.parent) {
              let d = pythag(this.x, this.y, this.parent.x, this.parent.y);
              if (d > BEAD_DIST) {
                let a = getAngle(this.x, this.y, this.parent.x, this.parent.y);
                let dx = Math.cos(a) * (d - BEAD_DIST);
                let dy = Math.sin(a) * (d - BEAD_DIST);
                if (this.x > this.parent.x) {
                  dx *= -1;
                  dy *= -1;
                }
        
                if (this.parent instanceof Bead) {
                  this.x += dx / 2;
                  this.y += dy / 2;
                  this.speedX += dx / 2;
                  this.speedY += dy / 2;
        
                  this.parent.x -= dx / 2;
                  this.parent.y -= dy / 2;
                  this.parent.speedX -= dx / 2;
                  this.parent.speedY -= dy / 2;
                }
                else {
                  this.x += dx;
                  this.y += dy;
                  this.speedX += dx;
                  this.speedY += dy;
                }
              }
            }
          }
        }
        var beads = [];
        for (let i = 0; i < BEAD_COUNT; i++) {
          beads.push( new Bead(canvas.width / 2, i * BEAD_DIST + (BEAD_SIZE)) );
          if (i > 0)
            beads[i].setParent(beads[i - 1]);
        }
        
        // the loop for animation
        var lastTime = new Date().getTime();
        (function loop () {
        
          let now = new Date().getTime();
          let deltaTime = now - lastTime;
          if (running) {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        
            if (beads[0].parent.y !== 0) {
              ctx.strokeStyle = lit ? "#c2cdd1" : "#737777";
              ctx.beginPath();
              ctx.moveTo(canvas.width / 2, 0);
              ctx.lineTo(canvas.width / 2, beads[0].parent.y);
              ctx.stroke();
            }
        
            ctx.strokeStyle = lit ? "#baaf62" : "#3d392d";
            ctx.fillStyle = lit ? "#544f3f" : "#2c2a1e";
            // split into 2 so we can double down on positioning constraints
            beads.forEach(function (bead) {
              bead.updateMomentum(deltaTime);
              bead.move();
              bead.positionBasedOnParent();
            });
            for (let i = 0; i < 20; i++) {
              beads.forEach(function (bead) {
                bead.positionBasedOnParent();
              });
            }
            beads.forEach(function (bead) {
              bead.drawLine();
            });
            beads.forEach(function (bead) {
              bead.draw();
            });
          }
        
          lastTime = now;
          requestAnimationFrame(loop);
        })();
        
        canvas.addEventListener('mouseup', function () {
          beads[BEAD_COUNT - 1].addMomentum(INITIAL_X_MOMENTUM, 0);
          //beads[0].addMomentum(0, GRAVITY * -4);
          beads[0].parent.y = 0;
          running = true;
        });
        canvas.addEventListener('mousedown', function () {
          beads[0].parent.y = BEAD_DIST * 2;
          running = true;
        });
        
        // turn off when document not visible
        document.addEventListener('visibilitychange', function () {
          lastTime = new Date().getTime();
          running = !document.hidden;
        });
        
        // change lit state
        switchInp.addEventListener('change', function (e) {
          lit = this.checked;
        });
  </script>